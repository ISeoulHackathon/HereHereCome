
<div id="chart"></div>
<!-- D3.js -->
<script src="http://d3js.org/d3.v3.min.js"></script>
<script src="http://d3js.org/queue.v1.min.js"></script>
<script src="http://d3js.org/topojson.v1.min.js"></script>
<script>

// set params
var width = 1000,
    height = 800;

var svg = d3.select("#chart").append("svg")
    .attr("width", width)
    .attr("height", height);
var projection = d3.geo.mercator()
    .center([126.9895, 37.5651])
    .scale([100000])
    .translate([width / 2, height / 2]);

var path = d3.geo.path().projection(projection);
var zoom = d3.behavior.zoom()
    // .translate(projection.translate())
    // .scale(projection.scale())
    // .scaleExtent([height, 10 * height])
    .on("zoom", zoomed);
var map = svg.append("g").attr("id", "map").call(zoom),
    points = svg.append("g")
                .attr("id", "places");



//add Map
d3.json("json/seoul_municipalities_topo_simple.json", function(error, data) {
    var features = topojson.feature(data, data.objects.seoul_municipalities_geo).features;
    // draw path of map from json data
    map.selectAll("path").data(features).enter().append("path").attr("class", function(d) {
        return "municipality c" + d.properties.code
    }).attr("d", path).call(zoom);
    // draw text of map
    map.selectAll("text").data(features).enter().append("text").attr("transform", function(d) {
        return "translate(" + path.centroid(d) + ")";
    }).attr("dy", ".35em").attr("class", "municipality-label").text(function(d) {
        return d.properties.name;
    });
});
d3.csv("places.csv", function(data) {
  points.selectAll("circle")
      .data(data)
      .enter().append("circle")
      .attr("class", "place")
      .attr("cx", function(d) { return projection([d.lon, d.lat])[0]; })
      .attr("cy", function(d) { return projection([d.lon, d.lat])[1]; })
      .attr("r", 10);

  points.selectAll("text")
      .data(data)
      .enter().append("text")
      .attr("x", function(d) { return projection([d.lon, d.lat])[0]; })
      .attr("y", function(d) { return projection([d.lon, d.lat])[1] + 8; })
      .text(function(d) { return d.name });
});
function zoomed() {
  // projection.translate(d3.event.translate).scale(d3.event.scale);
  // points.attr("transform", "translate (" + d3.event.translate + ")");
  // map.selectAll("path").attr("d", path);
  map.attr("transform", "translate(" + d3.event.translate + ") scale(" + d3.event.scale + ")");
  points.attr("transform", "translate(" + d3.event.translate + ") scale(" + d3.event.scale + ")");
}
</script>
